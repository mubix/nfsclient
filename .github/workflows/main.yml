on: release
name: Build on release
jobs:
  build:
    name: Build Go
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.0
    - name: osx build
      uses: shoukoo/golang-pipeline/go1.19/release@master
      if: github.event.action == 'published'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: darwin
        GOARCH: amd64
    - name: windows build
      uses: shoukoo/golang-pipeline/go1.19/release@master
      if: github.event.action == 'published'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: windows
        GOARCH: amd64
    - name: linux build
      uses: shoukoo/golang-pipeline/go1.19/release@master
      if: github.event.action == 'published'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: linux
        GOARCH: amd64
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: nfsclient
            asset_name: nfsclient-linux-amd64
          - os: windows-latest
            artifact_name: nfsclient.exe
            asset_name: nfsclient-windows-amd64
          - os: macos-latest
            artifact_name: nfsclient
            asset_name: nfsclient-macos-amd64
    steps:
    - uses: actions/checkout@v3
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
